{"version":3,"sources":["components/GameCard/index.js","components/Wrapper/index.js","components/Main/index.js","components/Footer/index.js","components/Header/index.js","components/Nav/index.js","components/Hero/index.js","App.js","index.js"],"names":["GameCard","props","react_default","a","createElement","className","onClick","removeCard","id","src","image","alt","name","class","Wrapper","style","backgroundImage","concat","background","backgroundSize","children","Main","Footer","href","Header","Nav","score","topscore","Hero","App","state","pokemon","shake","updateScore","filtered","_this","filter","data","length","clicked","shakePicture","alert","updateTopScore","newGame","setState","randomizeBoard","sourceArray","i","j","Math","floor","random","temp","this","map","_this2","components_Wrapper","components_Header","components_Nav","components_Hero","components_Main","friend","components_GameCard","key","occupation","location","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d2dbba8d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction GameCard(props) {\n  return (\n  \n\n<div className=\"col s4 \">\n  <div className=\"clicky white center valign-wrapper\" onClick={() => props.removeCard(props.id)}>\n  \n      <img src={props.image} alt={props.name} class=\"responsive-img myImg\"/>\n    \n  </div>\n  </div>\n  );\n}\n\nexport default GameCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div style={{\n    backgroundImage: `url(${props.background})`,\n    backgroundSize: `cover`\n\n  }}>{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Main(props) {\n\n  return (\n    <main className=\"container main\">\n      <div className=\"row\">{props.children}</div>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer(props) {\n  return (\n\n    <footer class=\"page-footer red\">\n      <div class=\"container footerRow\">\n\n      </div>\n      <div class=\"footer-copyright\">\n        <div class=\"container\">\n          Â© Gotta Click 'Em' All\n      <a class=\"grey-text text-lighten-4 right\" href=\"#!\">Cord Exum</a>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return (\n    <header>\n        {props.children}\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav(props) {\n  return (\n\n    <div className=\"row red white-text valign-wrapper myRow\">\n      <div className=\"col s12 m2\">\n        <h3 className=\"flow-text center-align\">Click a Pokemon to begin!</h3>\n      </div>\n      <div className=\"col s12 m8\">\n        <h1 className=\"center\"><a href=\"/\" className=\"mainTitle\">Gotta Click 'Em All!</a></h1>\n      </div>\n      <div className=\"col s12 m2\">\n        <h4 className=\"flow-text\">Score: {props.score}</h4>\n        <h4 className=\"flow-text\">Top Score: {(props.topscore > props.score) ? props.topscore : props.score}</h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero white-text valign-wrapper container-fluid\">\n        {props.children}\n    </div>\n  );\n}\n\nexport default Hero;\n","import React, { Component } from \"react\";\n\nimport GameCard from \"./components/GameCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\"\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\"\nimport pokemon from \"./pokemon.json\";\nimport Hero from \"./components/Hero\";\n\nclass App extends Component {\n  // Setting this.state.pokemon to the pokemon json array\n  state = {\n    pokemon,\n    score: 0,\n    topscore: 0,\n    shake: false,\n  };\n\n\n\n  updateScore = id => {\n    const filtered = this.state.pokemon.filter(data => data.id === id)\n\n    if (filtered.length > 0) {\n      if (filtered[0].clicked) {\n        this.shakePicture();\n        alert(\"Try again! You gotta Catch 'Em All!\");\n        this.updateTopScore(this.state.score);\n        this.newGame();\n      } else {\n        filtered[0].clicked = true;\n        this.setState({ score: this.state.score + 1 });\n        this.randomizeBoard();\n      }\n    }\n\n\n  }\n\n  updateTopScore = score => {\n    this.state.topscore < score ? this.setState({ topscore: score }) : this.setState({ topscore: this.state.topscore })\n\n  }\n\n  shakePicture() {\n    this.setState({ shake: !this.state.shake });\n  }\n\n  newGame() {\n    let pokemon = this.state.pokemon.map(data => {\n      data.clicked = false;\n      return data;\n    })\n\n    this.setState({\n      score: 0,\n      pokemon,\n    })\n\n    this.randomizeBoard();\n    this.shakePicture();\n  }\n\n  randomizeBoard = () => {\n    let sourceArray = this.state.pokemon\n    for (let i = 0; i < sourceArray.length - 1; i++) {\n      let j = i + Math.floor(Math.random() * (sourceArray.length - i));\n      let temp = sourceArray[j];\n      sourceArray[j] = sourceArray[i];\n      sourceArray[i] = temp;\n    }\n    this.setState({ pokemon: sourceArray })\n  }\n\n  render() {\n    if (this.state.score > 11) {\n      alert(\"Congratulations you have won! Now go do something better with your time.\")\n    }\n\n    return (\n      <Wrapper background=\"https://cdn.vox-cdn.com/uploads/chorus_asset/file/11680589/Map_Art.png\">\n        <Header>\n          <Nav\n            score={this.state.score}\n            topscore={this.state.topscore}\n          />\n          <Hero>\n            <div className=\"row\">\n              <div className=\"col s12 center\">\n                <h1>Pokemon List</h1>\n              </div>\n\n              <div className=\"col s12 center\">\n                <h3 className=\"flow-text\">Try and catch all the Pokemon to score a point! Be careful, you can only catch each Pokemon one time!</h3>\n              </div>\n            </div>\n          </Hero>\n        </Header>\n        <Main >\n          {this.state.pokemon.map(friend => {\n            return (\n              <GameCard\n                removeCard={this.updateScore}\n                id={friend.id}\n                key={friend.id}\n                name={friend.name}\n                image={friend.image}\n                occupation={friend.occupation}\n                location={friend.location}\n              />\n            )\n          })}\n        </Main>\n        <Footer />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}